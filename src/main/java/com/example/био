https://stackoverflow.com/questions/44127381/how-to-set-jpa-entitymanagerfactory-for-persistence-unit-not-to-default

@Configuration
@EnableJpaRepositories(
    entityManagerFactoryRef = "notDefaultEntityManagerFactory",
    transactionManagerRef = "notDefaultTransactionManager",
    basePackageClasses = notDefaultRepository.class)
public class SomesqlDb{

    @Bean
    public DataSource dataSourcenotDefault() {
        return getDataSource(poolSize, driverClassName, jdbcUrl, userName, password);
    }

    @Bean(name = "notDefaultTransactionManager")
    PlatformTransactionManager notDefaultTransactionManager(EntityManagerFactory notDefaultEntityManagerFactory) {
        JpaTransactionManager txManager = new JpaTransactionManager();
        txManager.setEntityManagerFactory(notDefaultEntityManagerFactory);
        return txManager;
    }

    @Bean(name = "notDefaultEntityManagerFactory")
    LocalContainerEntityManagerFactoryBean notDefaultEntityManagerFactory() {
        LocalContainerEntityManagerFactoryBean em = new LocalContainerEntityManagerFactoryBean();
        em.setDataSource(dataSourcenotDefault());
        em.setPackagesToScan(notDefaultRepository.class.getPackage().getName(), notDefaultBi.class.getPackage().getName());
        em.setPersistenceUnitName("notDefaultDb");

        HibernateJpaVendorAdapter vendorAdapter = new HibernateJpaVendorAdapter();
        vendorAdapter.setGenerateDdl(false);
        em.setJpaVendorAdapter(vendorAdapter);
        return em;
    }
}